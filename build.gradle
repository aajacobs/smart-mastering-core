buildscript {
  repositories {
    jcenter()

    // Needed for marklogic-unit-test-client dependency until it's available via jcenter()
    maven {
      url {"https://dl.bintray.com/marklogic-community/Maven"}
    }
  }
  dependencies {
    classpath "com.marklogic:marklogic-unit-test-client:0.12.0"
    classpath "com.marklogic:ml-gradle:${mlGradleVersion}"
  }
}

plugins {
  id "java"
  id "maven-publish"
  id "com.jfrog.bintray" version "1.7.3"
  id 'net.saliman.properties' version '1.4.6'
  id "com.marklogic.ml-gradle" version "3.7.1"
}

repositories {
  mavenLocal()
  jcenter()

  // Needed for marklogic-unit-test and marklogic-unit-test-client dependencies until they're available via jcenter()
  maven {
    url {"https://dl.bintray.com/marklogic-community/Maven"}
  }
}

dependencies {
  mlRestApi "com.marklogic:marklogic-unit-test-modules:0.12.0"

  // For running marklogic-unit-test tests via JUnit
  testCompile "com.marklogic:marklogic-unit-test-client:0.12.0"
  testCompile "junit:junit:4+"
}

bintray {
  user = bintray_user
  key = bintray_key
  publications = ['mainModules', 'sourcesModules']
  pkg {
    repo = 'Maven'
    name = "smart-mastering-core"
    userOrg = 'marklogic-community'
    licenses = ["Apache-2.0"]
    vcsUrl = "https://github.com/marklogic-community/smart-mastering-core.git"
    version {
      name = project.version
      released = new Date()
    }
  }
}

// Defines a configuration for the MarkLogic modules; used by the modulesZip task below
configurations {
  modules
  sources
}

task modulesJar(type: Jar) {
  description = "Jar up the smart-mastering-core MarkLogic modules into a package that can be published"
  from("src/main/ml-modules") {
    into("smart-mastering-core/ml-modules")
  }
  baseName "smart-mastering-core"
}

task sourcesJar(type: Jar, dependsOn: classes) {
  description = "A sources jar is needed for publishing to jcenter; it has the same contents as the modulesJar"
  from("src/main/ml-modules")
  baseName "smart-mastering-core"
  classifier "sources"
}

artifacts {
  modules modulesJar
  sources sourcesJar
}

publishing {
  publications {
    mainModules(MavenPublication) {
      artifactId "smart-mastering-core"
      artifact modulesJar
    }
    sourcesModules(MavenPublication) {
      artifactId "smart-mastering-core"
      artifact sourcesJar
    }
  }
  repositories {
    mavenCentral()
  }
}

task createHttpCredentials(type: com.marklogic.gradle.task.MarkLogicTask) {
  def client = getAppConfig().newAppServicesDatabaseClient("Security")
  String xquery = """
xquery version "1.0-ml";

import module namespace sec = "http://marklogic.com/xdmp/security"
      at "/MarkLogic/security.xqy";

declare option xdmp:mapping "false";

try {
  sec:remove-credential("marklogic-unit-test-credentials")
} catch (\$e) {()};

xquery version "1.0-ml";

import module namespace sec = "http://marklogic.com/xdmp/security"
      at "/MarkLogic/security.xqy";

declare option xdmp:mapping "false";

sec:create-credential(
   "marklogic-unit-test-credentials",
   "Credentials for ML Rest Helper Calls",
   "${mlUsername}",
   "${mlPassword}",
   (),
   (),
   fn:false(),
   sec:uri-credential-target("http://localhost:${mlTestRestPort}/.*","digest"),
   xdmp:default-permissions()
)
""";
  try {
    String result
    result = client.newServerEval().xquery(xquery).evalAs(String.class);
    if (result != null) {
      println result
    }
  } finally {
    client.release()
  }
}

mlPostDeploy.dependsOn createHttpCredentials
